# SPDX-FileCopyrightText: None
# SPDX-License-Identifier: CC0-1.0

# include:
#   - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/linux.yml
#   - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/freebsd.yml
#   - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/windows.yml
#   - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/linux-qt6.yml
#   - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/freebsd-qt6.yml


.craft_build_windows_qt515:
  stage: deploy
  image: kdeorg/windows-msvc2019-qt515:latest
  tags:
    - Windows
  variables:
    PYTHONUTF8: 1
    CRAFT_BASE: "C:/Craft"
    CRAFT_PLATFORM: windows-msvc2019_64-cl
    CRAFT_BUILD_BLUEPRINT: ${CI_PROJECT_NAME}
    CRAFTMASTER_CONFIG: ci-utilities/resources/CraftConfig.ini
  interruptible: true
  before_script:
    - cd "$CRAFT_BASE"
    - python craftmaster/Craftmaster.py --setup --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c --set version=master ${CRAFT_BUILD_BLUEPRINT}
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c --set branch=${CI_COMMIT_REF_NAME} ${CRAFT_BUILD_BLUEPRINT}
    # Update Craft itself
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c -i --options virtual.ignored=True --update craft
    # Make sure NSIS is installed (TODO: Pre-install nsis in the Docker image)
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c (-split ${CRAFT_OPTIONS}) nsis
    # Make sure the build environment for this application is clean
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c (-split ${CRAFT_OPTIONS}) (-split ${CRAFT_PROJECT_PARAMS}) --unmerge ${CRAFT_BUILD_BLUEPRINT} (-split ${CRAFT_REBUILD_BLUEPRINT})
  script:
    - cd "$CRAFT_BASE"
    # Ask Craftmaster to ensure all the dependencies are installed for this application we are going to be building
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c (-split ${CRAFT_OPTIONS}) (-split ${CRAFT_PROJECT_PARAMS}) --install-deps ${CRAFT_BUILD_BLUEPRINT}
    # Actually build the application now
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c (-split ${CRAFT_OPTIONS}) --no-cache (-split ${CRAFT_PROJECT_PARAMS}) --src-dir ${CI_PROJECT_DIR} -vv ${CRAFT_BUILD_BLUEPRINT} (-split ${CRAFT_REBUILD_BLUEPRINT})
  after_script:
    # Ensure gpg-agent and dbus-daemon are no longer around
    # For reasons unknown, these processes somehow end up running within the Binary Factory environment
    # If they're allowed to continue running, then later cleanup operations will fail and leave the builder setup broken (requiring manual intervention to fix)
    - taskkill /F /IM gpg-agent.exe; $null
    - taskkill /F /IM dbus-daemon.exe; $null
    - cd "$CRAFT_BASE"
    - python craftmaster/Craftmaster.py --config "${CRAFTMASTER_CONFIG}" --target ${CRAFT_PLATFORM} -c (-split ${CRAFT_OPTIONS}) --clean-unused
  when: manual

# Nightly win64 craft build of Kate
craft_nightly_windows_qt515:
  extends: .craft_build_windows_qt515
  variables:
    CRAFT_BUILD_TYPE: Nightly

craft_windows_x86_64:
  stage: deploy
  when: manual
  image: kdeorg/windows-msvc2019-qt515:latest
  #needs: ["windows_qt515"]
  tags:
    - Windows
  variables:
    PYTHONUTF8: 1
    GIT_STRATEGY: none
    KDECI_CRAFT_PLATFORM: windows-msvc2019_64-cl
    KDECI_CRAFT_CACHE: C:/Gitlab/Craft/download/
    KDECI_CRAFT_CONFIG: ci-utilities/resources/CraftConfig.ini
  interruptible: true
  before_script:
    - git clone $env:CI_REPOSITORY_URL --branch=$env:CI_COMMIT_REF_NAME src/
    - cd C:\Gitlab\Craft\
    - Get-ChildItem C:\Gitlab\Craft\ | Remove-Item -Recurse -Force
    - git clone https://invent.kde.org/packaging/craftmaster --branch=master
    - git clone https://invent.kde.org/sysadmin/ci-utilities
  script:
    # Get Craft itself ready
    - python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c -i --options virtual.ignored=True --update craft
    # Install all of our dependencies
    - python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c --install-deps $env:CI_PROJECT_NAME
    # Build the actual application
    - python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c --no-cache --target master --src-dir $env:CI_PROJECT_DIR/src/ $env:CI_PROJECT_NAME
    # Ensure the tools needed to conduct packaging are installed
    - python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c -i --update nsis
    # Package it up!
    - python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c --package --target master --src-dir $env:CI_PROJECT_DIR/src/ $env:CI_PROJECT_NAME
    - python craftmaster/Craftmaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c --package --options "[Packager]PackageType=AppxPackager" --target master --src-dir $env:CI_PROJECT_DIR/src/ $env:CI_PROJECT_NAME
    # Save our package
    - $packageDir=python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c -q --get "packageDestinationDir()" virtual/base
    - mkdir $env:CI_PROJECT_DIR/.kde-ci-packages
    - cd $env:CI_PROJECT_DIR/.kde-ci-packages
    - echo "Files that will be copied:"
    - (Get-ChildItem -Path $packageDir -Recurse -Include *.appx, *.appxupload, *.exe, *.7z, *.sha256).FullName
    - Get-ChildItem -Path $packageDir -Recurse -Include *.appx, *.appxupload, *.exe, *.7z, *.sha256 | Copy-Item
    - echo "Copied files:"
    - (Get-ChildItem -Recurse).FullName
  artifacts:
    expire_in: 3 days
    when: on_success
    expose_as: "Windows"
    paths:
     - ".kde-ci-packages/"

craft_playground:
  stage: deploy
  when: manual
  image: kdeorg/windows-msvc2019-qt515:latest
  tags:
    - Windows
  variables:
    PYTHONUTF8: 1
    GIT_STRATEGY: none
    KDECI_CRAFT_PLATFORM: windows-msvc2019_64-cl
    KDECI_CRAFT_CACHE: C:/Gitlab/Craft/download/
    KDECI_CRAFT_CONFIG: ci-utilities/resources/CraftConfig.ini
  interruptible: true
  before_script:
    - git clone $env:CI_REPOSITORY_URL --branch=$env:CI_COMMIT_REF_NAME src/
    - cd C:\Gitlab\Craft\
    - Get-ChildItem C:\Gitlab\Craft\ | Remove-Item -Recurse -Force
    - git clone https://invent.kde.org/packaging/craftmaster --branch=master
    - git clone https://invent.kde.org/sysadmin/ci-utilities
    # Get Craft itself ready
    - python craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --target $env:KDECI_CRAFT_PLATFORM -c -i --options virtual.ignored=True --update craft
  script:
    - craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --config-override $env:CI_PROJECT_DIR/src/craft.ini --target $env:KDECI_CRAFT_PLATFORM -c --get "fullPlasma" $env:CI_PROJECT_NAME
    - craftmaster/CraftMaster.py --config $env:KDECI_CRAFT_CONFIG --config-override $env:CI_PROJECT_DIR/src/craft.ini --target $env:KDECI_CRAFT_PLATFORM -c --get "packageAppx" $env:CI_PROJECT_NAME
